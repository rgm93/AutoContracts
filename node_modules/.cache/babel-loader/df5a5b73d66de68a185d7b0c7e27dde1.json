{"ast":null,"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \"/* add css styles here (optional) */\\n\\n.styles_react-code-input-container__tpiKG {\\n  position: relative;\\n}\\n\\n.styles_react-code-input__CRulA > input {\\n  border: solid 1px #a8adb7;\\n  border-right: none;\\n  font-family: 'Lato';\\n  font-size: 20px;\\n  color: #525461;\\n  text-align: center;\\n  box-sizing: border-box;\\n  border-radius: 0;\\n  -webkit-appearance: initial;\\n}\\n\\n.styles_react-code-input__CRulA > input:last-child {\\n  border-right: solid 1px #a8adb7;\\n  border-top-right-radius: 6px;\\n  border-bottom-right-radius: 6px;\\n}\\n\\n.styles_react-code-input__CRulA > input:first-child {\\n  border-top-left-radius: 6px;\\n  border-bottom-left-radius: 6px;\\n}\\n\\n.styles_react-code-input__CRulA > input:focus {\\n  outline: none;\\n  border: 1px solid #006fff;\\n  caret-color: #006fff;\\n}\\n\\n.styles_react-code-input__CRulA > input:focus + input {\\n  border-left: none;\\n}\\n\\n.styles_loading__Z65VQ {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  text-align: center;\\n}\\n\\n.styles_blur__19vMK {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #fff;\\n  opacity: 0.5;\\n  filter: blur(0.5px);\\n  transition: opacity 0.3s;\\n}\\n\\n.styles_title__1cca0 {\\n  margin: 0;\\n  height: 20px;\\n  padding-bottom: 10px;\\n}\\n\\n.styles_spin__6y_8G {\\n  display: inline-block;\\n  animation: styles_loadingCircle__293ky 1s infinite linear;\\n}\\n\\n@keyframes styles_loadingCircle__293ky {\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n}\\n\";\nvar styles = {\n  \"react-code-input-container\": \"styles_react-code-input-container__tpiKG\",\n  \"react-code-input\": \"styles_react-code-input__CRulA\",\n  \"loading\": \"styles_loading__Z65VQ\",\n  \"blur\": \"styles_blur__19vMK\",\n  \"title\": \"styles_title__1cca0\",\n  \"spin\": \"styles_spin__6y_8G\",\n  \"loadingCircle\": \"styles_loadingCircle__293ky\"\n};\nstyleInject(css);\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar toConsumableArray = function toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar KEY_CODE = {\n  backspace: 8,\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40\n};\n\nvar ReactCodeInput = function (_Component) {\n  inherits(ReactCodeInput, _Component);\n\n  function ReactCodeInput(props) {\n    classCallCheck(this, ReactCodeInput);\n\n    var _this = possibleConstructorReturn(this, (ReactCodeInput.__proto__ || Object.getPrototypeOf(ReactCodeInput)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var fields = props.fields,\n        values = props.values;\n    var vals = void 0;\n    var autoFocusIndex = 0;\n\n    if (values && values.length) {\n      vals = [];\n\n      for (var i = 0; i < fields; i++) {\n        vals.push(values[i] || '');\n      }\n\n      autoFocusIndex = values.length >= fields ? 0 : values.length;\n    } else {\n      vals = Array(fields).fill('');\n    }\n\n    _this.state = {\n      values: vals,\n      autoFocusIndex: autoFocusIndex\n    };\n    _this.iRefs = [];\n\n    for (var _i = 0; _i < fields; _i++) {\n      _this.iRefs.push(React.createRef());\n    }\n\n    _this.id = +new Date(); // this.handleKeys = Array(fields).fill(false);\n\n    return _this;\n  }\n  /**\n   * Clear all field value & focus first field\n   */\n  // onKeyUp = e => {\n  //   const index = parseInt(e.target.dataset.id);\n  //   if (this.handleKeys[index]) {\n  //     this.handleKeys[index] = false;\n  //     const next = this.iRefs[index + 1];\n  //     if (next) {\n  //       next.current.focus();\n  //     }\n  //   }\n  // };\n\n\n  createClass(ReactCodeInput, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _state = this.state,\n          values = _state.values,\n          autoFocusIndex = _state.autoFocusIndex;\n      var _props = this.props,\n          loading = _props.loading,\n          title = _props.title,\n          fieldHeight = _props.fieldHeight,\n          fieldWidth = _props.fieldWidth,\n          fields = _props.fields,\n          autoFocus = _props.autoFocus,\n          className = _props.className,\n          type = _props.type;\n      var INPUT_STYLE = {\n        width: fieldWidth,\n        height: fieldHeight\n      };\n      var ROOT_STYLE = {\n        width: fields * fieldWidth\n      };\n      var LOADING_STYLE = {\n        lineHeight: fieldHeight + 'px'\n      };\n      return React.createElement('div', {\n        className: styles['react-code-input-container'] + ' ' + className,\n        style: ROOT_STYLE\n      }, title && React.createElement('p', {\n        className: styles['title']\n      }, title), React.createElement('div', {\n        className: styles['react-code-input']\n      }, values.map(function (value, index) {\n        return React.createElement('input', {\n          type: type === 'number' ? 'tel' : type,\n          pattern: type === 'number' ? '[0-9]' : null,\n          autoFocus: autoFocus && index === autoFocusIndex,\n          style: INPUT_STYLE,\n          key: _this2.id + '-' + index,\n          'data-id': index,\n          value: value,\n          ref: _this2.iRefs[index],\n          onChange: _this2.onChange,\n          onKeyDown: _this2.onKeyDown // onKeyUp={this.onKeyUp}\n          ,\n          onFocus: _this2.onFocus\n        });\n      })), loading && React.createElement('div', {\n        className: styles['loading'],\n        style: LOADING_STYLE\n      }, React.createElement('div', {\n        className: styles['blur']\n      }), React.createElement('svg', {\n        className: styles['spin'],\n        viewBox: '0 0 1024 1024',\n        'data-icon': 'loading',\n        width: '1em',\n        height: '1em',\n        fill: 'currentColor',\n        'aria-hidden': 'true'\n      }, React.createElement('path', {\n        fill: '#006fff',\n        d: 'M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 0 0-94.3-139.9 437.71 437.71 0 0 0-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z'\n      }))));\n    }\n  }]);\n  return ReactCodeInput;\n}(Component);\n\nReactCodeInput.propTypes = {\n  type: PropTypes.oneOf(['text', 'number']),\n  onChange: PropTypes.func,\n  onComplete: PropTypes.func,\n  fields: PropTypes.number,\n  loading: PropTypes.bool,\n  title: PropTypes.string,\n  fieldWidth: PropTypes.number,\n  fieldHeight: PropTypes.number,\n  autoFocus: PropTypes.bool,\n  className: PropTypes.string,\n  values: PropTypes.arrayOf(PropTypes.string)\n};\nReactCodeInput.defaultProps = {\n  type: 'number',\n  fields: 6,\n  fieldWidth: 58,\n  fieldHeight: 54,\n  autoFocus: true\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.__clearvalues__ = function () {\n    var fields = _this3.props.fields;\n\n    _this3.setState({\n      values: Array(fields).fill('')\n    });\n\n    _this3.iRefs[0].current.focus();\n  };\n\n  this.triggerChange = function () {\n    var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this3.state.values;\n    var _props2 = _this3.props,\n        onChange = _props2.onChange,\n        onComplete = _props2.onComplete,\n        fields = _props2.fields;\n    var val = values.join('');\n    onChange && onChange(val);\n\n    if (onComplete && val.length >= fields) {\n      onComplete(val);\n    }\n  };\n\n  this.onChange = function (e) {\n    var index = parseInt(e.target.dataset.id);\n\n    if (_this3.props.type === 'number') {\n      e.target.value = e.target.value.replace(/[^\\d]/gi, '');\n    } // this.handleKeys[index] = false;\n\n\n    if (e.target.value === '' || _this3.props.type === 'number' && !e.target.validity.valid) {\n      return;\n    }\n\n    var fields = _this3.props.fields;\n    var next = void 0;\n    var value = e.target.value;\n    var values = _this3.state.values;\n    values = Object.assign([], values);\n\n    if (value.length > 1) {\n      var nextIndex = value.length + index - 1;\n\n      if (nextIndex >= fields) {\n        nextIndex = fields - 1;\n      }\n\n      next = _this3.iRefs[nextIndex];\n      var split = value.split('');\n      split.forEach(function (item, i) {\n        var cursor = index + i;\n\n        if (cursor < fields) {\n          values[cursor] = item;\n        }\n      });\n\n      _this3.setState({\n        values: values\n      });\n    } else {\n      next = _this3.iRefs[index + 1];\n      values[index] = value;\n\n      _this3.setState({\n        values: values\n      });\n    }\n\n    if (next) {\n      next.current.focus();\n      next.current.select();\n    }\n\n    _this3.triggerChange(values);\n  };\n\n  this.onKeyDown = function (e) {\n    var index = parseInt(e.target.dataset.id);\n    var prevIndex = index - 1;\n    var nextIndex = index + 1;\n    var prev = _this3.iRefs[prevIndex];\n    var next = _this3.iRefs[nextIndex];\n\n    switch (e.keyCode) {\n      case KEY_CODE.backspace:\n        e.preventDefault();\n        var vals = [].concat(toConsumableArray(_this3.state.values));\n\n        if (_this3.state.values[index]) {\n          vals[index] = '';\n\n          _this3.setState({\n            values: vals\n          });\n\n          _this3.triggerChange(vals);\n        } else if (prev) {\n          vals[prevIndex] = '';\n          prev.current.focus();\n\n          _this3.setState({\n            values: vals\n          });\n\n          _this3.triggerChange(vals);\n        }\n\n        break;\n\n      case KEY_CODE.left:\n        e.preventDefault();\n\n        if (prev) {\n          prev.current.focus();\n        }\n\n        break;\n\n      case KEY_CODE.right:\n        e.preventDefault();\n\n        if (next) {\n          next.current.focus();\n        }\n\n        break;\n\n      case KEY_CODE.up:\n      case KEY_CODE.down:\n        e.preventDefault();\n        break;\n\n      default:\n        // this.handleKeys[index] = true;\n        break;\n    }\n  };\n\n  this.onFocus = function (e) {\n    e.target.select(e);\n  };\n};\n\nexport default ReactCodeInput;","map":null,"metadata":{},"sourceType":"module"}
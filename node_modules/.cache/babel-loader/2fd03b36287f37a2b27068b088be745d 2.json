{"ast":null,"code":"import _classCallCheck from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/src/views/Transactions/Contracts/AssignmentContract/steps/AssignmentContractFinal.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Form from \"react-jsonschema-form\";\nimport \"views/Transactions/Contracts/AssignmentContract/contract/AssignmentContract.css\";\nimport uischema from \"views/Transactions/Contracts/AssignmentContract/json/uiSchema.json\";\nimport formdata from 'views/Transactions/Contracts/AssignmentContract/json/formData.json';\nimport PDFContract from 'views/Transactions/Contracts/AssignmentContract/PDFContract';\nimport ReactS3 from 'react-s3';\nimport AssignmentContractResume from 'views/Transactions/Contracts/AssignmentContract/steps/AssignmentContractResume';\nimport SCSHID from './SCSHID';\nimport PDFEditor from '../PDFEditor';\nimport mockdata from '../json/mockup.json';\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport * as faceapi from 'face-api.js';\nimport PDFContractPreview from \"../PDFContractPreview\";\nimport { print } from \"../converters/utils\"; // Blockchain Configuration\n\nvar axios = require('axios');\n\nvar fs = require('fs');\n\nvar FormData = require('form-data');\n\nvar config = {\n  bucketName: 'scsh-pdf',\n  dirName: 'pdf',\n\n  /* optional */\n  region: 'eu-west-1',\n  accessKeyId: 'AKIAU3MFK7JRWHJVDT4H',\n  secretAccessKey: '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'\n};\nvar pinataApiKey = \"f96160442ac769baa972\";\nvar pinataSecretApiKey = \"2ddd72a7f8b78d6dcb43e3b350f115abd9a112a5bf62c7c948d2bb3f4614070a\";\n\nvar testAuthentication = function testAuthentication() {\n  var url = \"https://api.pinata.cloud/data/testAuthentication\";\n  return axios.get(url, {\n    headers: {\n      'pinata_api_key': pinataApiKey,\n      'pinata_secret_api_key': pinataSecretApiKey\n    }\n  }).then(function (response) {//handle your response here\n  }).catch(function (error) {//handle error here\n  });\n};\n\nvar pinFileToIPFS = function pinFileToIPFS(file, pinataApiKey, pinataSecretApiKey) {\n  var url = \"https://api.pinata.cloud/pinning/pinFileToIPFS\"; //we gather a local file for this example, but any valid readStream source will work here.\n\n  var data = new FormData();\n  data.append('file', fs.createReadStream('./contract.pdf')); //You'll need to make sure that the metadata is in the form of a JSON object that's been convered to a string\n  //metadata is optional\n\n  var metadata = JSON.stringify({\n    name: 'contract',\n    keyvalues: {\n      exampleKey: 'contractKey'\n    }\n  });\n  data.append('pinataMetadata', metadata); //pinataOptions are optional\n\n  var pinataOptions = JSON.stringify({\n    cidVersion: 0\n  });\n  data.append('pinataOptions', pinataOptions);\n  return axios.post(url, data, {\n    maxContentLength: 'Infinity',\n    //this is needed to prevent axios from erroring out with large files\n    headers: {\n      'Content-Type': \"multipart/form-data; boundary=\".concat(data._boundary),\n      'pinata_api_key': pinataApiKey,\n      'pinata_secret_api_key': pinataSecretApiKey\n    }\n  }).then(function (response) {//handle response here\n  }).catch(function (error) {//handle error here\n  });\n}; // PINATA - IPFS\n// API KEY: f96160442ac769baa972\n// API SECRET KEY: 2ddd72a7f8b78d6dcb43e3b350f115abd9a112a5bf62c7c948d2bb3f4614070a\n\n\nvar AssignmentContractFinal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AssignmentContractFinal, _React$Component);\n\n  function AssignmentContractFinal(props) {\n    var _this;\n\n    _classCallCheck(this, AssignmentContractFinal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssignmentContractFinal).call(this, props));\n\n    _this.handleHTML = function (html) {\n      return _this.setState({\n        html: html\n      });\n    };\n\n    _this.next = function (type) {\n      console.log('typenext', type);\n\n      switch (type) {\n        case 'editor':\n          _this.setState({\n            isEditing: true,\n            isResuming: false\n          });\n\n          break;\n\n        case 'preview':\n          _this.setState({\n            isDrafting: true,\n            isEditing: false\n          });\n\n          break;\n\n        case 'sign':\n          _this.setState({\n            isSigning: true,\n            isDrafting: false\n          });\n\n          break;\n      }\n\n      _this.props.nextStep();\n    };\n\n    _this.back = function (type) {\n      console.log('typeback', type);\n\n      switch (type) {\n        case 'resume':\n          _this.setState({\n            isResuming: false\n          });\n\n          break;\n\n        case 'editor':\n          _this.setState({\n            isEditing: false,\n            isResuming: true\n          });\n\n          break;\n\n        case 'preview':\n          _this.setState({\n            isDrafting: false,\n            isEditing: true\n          });\n\n          break;\n\n        case 'sign':\n          _this.setState({\n            isSigning: false,\n            isDrafting: true\n          });\n\n          break;\n      }\n\n      _this.props.prevStep();\n    };\n\n    _this.state = {\n      form: {},\n      html: '',\n      pdfGenerated: false,\n      isEditing: false,\n      isDrafting: false,\n      isSigning: false,\n      textPDF: '',\n      blob: []\n    };\n    return _this;\n  }\n\n  _createClass(AssignmentContractFinal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        form: mockdata,\n        isResuming: true\n      });\n    }\n  }, {\n    key: \"render\",\n\n    /*signContractBlockchain = () => {\n       \n       // BLOCKCHAIN\n        pinFileToIPFS(pinataApiKey, pinataSecretApiKey);\n       \n       console.log('Guardando en AWS...');\n       ReactS3.uploadFile(this.state.blob, config)\n       .then((data) => {\n          console.log(data.location)\n       })\n       .catch((err) => {\n          alert(err)\n       })\n     } */\n    value: function render() {\n      var _this2 = this;\n\n      console.log('this.state.html', this.state.html);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.state.isResuming ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \" Por favor, compruebe que todos los datos est\\xE1n correctos antes de generar el contrato \"), React.createElement(AssignmentContractResume, {\n        data: this.state.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"buttonStepsBack\",\n        onClick: function onClick() {\n          return _this2.back('resume');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Atr\\xE1s\"), React.createElement(\"button\", {\n        className: \"buttonGeneratePDF\",\n        onClick: function onClick() {\n          return _this2.next('editor');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Ir a editor\"))) : this.state.isEditing ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pdf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(PDFEditor, {\n        data: this.state.html !== '' ? ['html', this.state.html] : ['form', this.state.form],\n        next: this.next,\n        back: this.back,\n        handleHTML: this.handleHTML,\n        state: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })) : this.state.isDrafting ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(PDFContractPreview, {\n        data: this.state.html,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"buttonStepsBack\",\n        onClick: function onClick() {\n          return _this2.back('preview');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Atr\\xE1s\"), React.createElement(\"button\", {\n        className: \"buttonGeneratePDF\",\n        onClick: function onClick() {\n          return _this2.next('sign');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Firmar\"))) : this.state.isSigning ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(SCSHID, {\n        next: this.next('contract'),\n        back: function back() {\n          return _this2.back('preview');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AssignmentContractFinal;\n}(React.Component);\n\nexport default AssignmentContractFinal;","map":{"version":3,"sources":["/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/src/views/Transactions/Contracts/AssignmentContract/steps/AssignmentContractFinal.jsx"],"names":["React","PropTypes","Form","uischema","formdata","PDFContract","ReactS3","AssignmentContractResume","SCSHID","PDFEditor","mockdata","PDFDownloadLink","faceapi","PDFContractPreview","print","axios","require","fs","FormData","config","bucketName","dirName","region","accessKeyId","secretAccessKey","pinataApiKey","pinataSecretApiKey","testAuthentication","url","get","headers","then","response","catch","error","pinFileToIPFS","file","data","append","createReadStream","metadata","JSON","stringify","name","keyvalues","exampleKey","pinataOptions","cidVersion","post","maxContentLength","_boundary","AssignmentContractFinal","props","handleHTML","html","setState","next","type","console","log","isEditing","isResuming","isDrafting","isSigning","nextStep","back","prevStep","state","form","pdfGenerated","textPDF","blob","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Form from \"react-jsonschema-form\";\nimport \"views/Transactions/Contracts/AssignmentContract/contract/AssignmentContract.css\";\nimport uischema from \"views/Transactions/Contracts/AssignmentContract/json/uiSchema.json\"\nimport formdata from 'views/Transactions/Contracts/AssignmentContract/json/formData.json';\nimport PDFContract from 'views/Transactions/Contracts/AssignmentContract/PDFContract';\nimport ReactS3 from 'react-s3';\nimport AssignmentContractResume from 'views/Transactions/Contracts/AssignmentContract/steps/AssignmentContractResume'\nimport SCSHID from './SCSHID'\nimport PDFEditor from '../PDFEditor'\nimport mockdata from '../json/mockup.json';\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport * as faceapi from 'face-api.js';\nimport PDFContractPreview from \"../PDFContractPreview\";\nimport { print } from \"../converters/utils\";\n\n// Blockchain Configuration\nconst axios = require('axios');\nconst fs = require('fs');\nconst FormData = require('form-data');\n\nconst config = {\n   bucketName: 'scsh-pdf',\n   dirName: 'pdf', /* optional */\n   region: 'eu-west-1',\n   accessKeyId: 'AKIAU3MFK7JRWHJVDT4H',\n   secretAccessKey: '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',\n}\n\nconst pinataApiKey = \"f96160442ac769baa972\";\nconst pinataSecretApiKey = \"2ddd72a7f8b78d6dcb43e3b350f115abd9a112a5bf62c7c948d2bb3f4614070a\";\n\nconst testAuthentication = () => {\n   const url = `https://api.pinata.cloud/data/testAuthentication`;\n   return axios\n       .get(url, {\n            headers: {\n               'pinata_api_key': pinataApiKey,\n               'pinata_secret_api_key': pinataSecretApiKey\n            }\n       })\n       .then(function (response) {\n           //handle your response here\n       })\n       .catch(function (error) {\n           //handle error here\n       });\n};\n\nconst pinFileToIPFS = (file, pinataApiKey, pinataSecretApiKey) => {\n   const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n\n   //we gather a local file for this example, but any valid readStream source will work here.\n   let data = new FormData();\n   data.append('file', fs.createReadStream('./contract.pdf'));\n\n   //You'll need to make sure that the metadata is in the form of a JSON object that's been convered to a string\n   //metadata is optional\n   const metadata = JSON.stringify({\n       name: 'contract',\n       keyvalues: {\n           exampleKey: 'contractKey'\n       }\n   });\n   data.append('pinataMetadata', metadata);\n\n   //pinataOptions are optional\n   const pinataOptions = JSON.stringify({\n       cidVersion: 0\n   });\n   data.append('pinataOptions', pinataOptions);\n\n   return axios.post(url,\n       data,\n       {\n           maxContentLength: 'Infinity', //this is needed to prevent axios from erroring out with large files\n           headers: {\n               'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n               'pinata_api_key': pinataApiKey,\n               'pinata_secret_api_key': pinataSecretApiKey\n           }\n       }\n   ).then(function (response) {\n       //handle response here\n   }).catch(function (error) {\n       //handle error here\n   });\n};\n\n// PINATA - IPFS\n// API KEY: f96160442ac769baa972\n// API SECRET KEY: 2ddd72a7f8b78d6dcb43e3b350f115abd9a112a5bf62c7c948d2bb3f4614070a\n\nclass AssignmentContractFinal extends React.Component {\n   constructor(props) {\n      super(props)\n      this.state = {\n         form: {},\n         html: '',\n         pdfGenerated: false,\n         isEditing: false,\n         isDrafting: false,\n         isSigning: false,\n         textPDF: '',\n         blob: []\n      }\n   }\n\n   componentWillMount() {\n      this.setState({form: mockdata, isResuming: true})\n   }\n\n   handleHTML = (html) => this.setState({html})\n\n   next = (type) => {\n      console.log('typenext', type)\n      switch(type) {\n         case 'editor': this.setState({isEditing: true, isResuming: false}); break;\n         case 'preview': this.setState({isDrafting: true, isEditing: false}); break;\n         case 'sign': this.setState({isSigning: true, isDrafting: false}); break;\n      }\n      this.props.nextStep()\n   }\n\n   back = (type) => {\n      console.log('typeback', type)\n      switch(type) {\n         case 'resume': this.setState({isResuming: false}); break;\n         case 'editor': this.setState({isEditing: false, isResuming: true}); break;\n         case 'preview': this.setState({isDrafting: false, isEditing: true}); break;\n         case 'sign': this.setState({isSigning: false, isDrafting: true}); break;\n      }\n      this.props.prevStep()\n   }\n\n   /*signContractBlockchain = () => {\n      \n      // BLOCKCHAIN\n\n      pinFileToIPFS(pinataApiKey, pinataSecretApiKey);\n      \n      console.log('Guardando en AWS...');\n      ReactS3.uploadFile(this.state.blob, config)\n      .then((data) => {\n         console.log(data.location)\n      })\n      .catch((err) => {\n         alert(err)\n      })\n\n   } */\n\n\n   render() {\n      console.log('this.state.html', this.state.html)\n      return (\n         <div>\n            {\n               this.state.isResuming ? (\n                  <div>\n                     <h3> Por favor, compruebe que todos los datos están correctos antes de generar el contrato </h3>\n                     <AssignmentContractResume data={this.state.form} />\n                     <div className=\"buttons\">\n                        <button className=\"buttonStepsBack\" onClick={() => this.back('resume')}>Atrás</button>\n                        <button \n                           className=\"buttonGeneratePDF\" \n                           onClick={() => this.next('editor')}>Ir a editor</button>\n                     </div>\n                     \n                  </div>\n               ) : this.state.isEditing ? (\n                  <div>\n                     <div className=\"pdf\"></div>\n                     <PDFEditor \n                        data={this.state.html !== '' ? ['html', this.state.html] : ['form', this.state.form]} \n                        next={this.next} \n                        back={this.back} \n                        handleHTML={this.handleHTML}\n                        state={this.state}\n                     />\n                  </div>\n               ) : this.state.isDrafting ? (\n                  <div>\n                     {/*<PDFContract data={this.state.form} />*/}\n                     <PDFContractPreview data={this.state.html} />\n                     <div className=\"buttons\">\n                        <button className=\"buttonStepsBack\" onClick={() => this.back('preview')}>Atrás</button>\n                        <button className=\"buttonGeneratePDF\" onClick={() => this.next('sign')}>Firmar</button>\n                     </div>\n                  </div>\n               ) : this.state.isSigning ? (\n                  <div>\n                     <SCSHID next={this.next('contract')} back={() => this.back('preview')}/>\n                  </div>\n               ) : (\n                  <div>\n                     {/*<div className=\"pdf\"></div>\n                     <PDFEditor \n                        data={this.state.form} \n                        next={this.next} \n                        back={this.back} \n                        handleHTML={this.handleHTML}\n                        state={this.state}\n                     />*/}\n                     \n                     {/*<PDFContract \n                        data={this.state.form}\n                        //textPDF={this.setTextPDF}\n                     />*/}\n                     {/*<PDFDownloadLink\n                        document={<PDFContract data={this.state.form} />}\n                        fileName=\"contract.pdf\"\n                        style={{\n                           textDecoration: \"none\",\n                           padding: \"10px\",\n                           color: \"#4a4a4a\",\n                           backgroundColor: \"#f2f2f2\",\n                           border: \"1px solid #4a4a4a\"\n                        }}\n                     >\n                        {({ blob, url, loading, error }) =>\n                           loading ? \"Loading document...\" : \"Download Pdf\"\n                        }\n                     </PDFDownloadLink>*/}\n                  {/*<button \n                     className=\"buttonGenerateEditPDF\" \n                  onClick={this.editContract}>Editar contrato</button>*/}\n                     \n                  </div>\n               ) \n            }\n         </div>\n      );\n   }\n}\n\nexport default AssignmentContractFinal;\n"]},"metadata":{},"sourceType":"module"}
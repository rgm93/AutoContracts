{"ast":null,"code":"import _defineProperty from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/src/layouts/Admin.jsx\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route } from \"react-router-dom\"; // creates a beautiful scrollbar\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // core components\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport routes from \"routes.js\";\nimport appStyle from \"assets/jss/material-dashboard-pro-react/layouts/adminStyle.jsx\";\nimport image from \"assets/img/sidebar-2.jpg\";\nimport logo from \"assets/img/logo-white.svg\";\nvar ps;\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.handleImageClick = function (image) {\n      _this.setState({\n        image: image\n      });\n    };\n\n    _this.handleColorClick = function (color) {\n      _this.setState({\n        color: color\n      });\n    };\n\n    _this.handleBgColorClick = function (bgColor) {\n      _this.setState({\n        bgColor: bgColor\n      });\n    };\n\n    _this.handleFixedClick = function () {\n      if (_this.state.fixedClasses === \"dropdown\") {\n        _this.setState({\n          fixedClasses: \"dropdown show\"\n        });\n      } else {\n        _this.setState({\n          fixedClasses: \"dropdown\"\n        });\n      }\n    };\n\n    _this.handleDrawerToggle = function () {\n      _this.setState({\n        mobileOpen: !_this.state.mobileOpen\n      });\n    };\n\n    _this.getActiveRoute = function (routes) {\n      var activeRoute = \"Default Brand Text\";\n\n      for (var i = 0; i < routes.length; i++) {\n        if (routes[i].collapse) {\n          var collapseActiveRoute = _this.getActiveRoute(routes[i].views);\n\n          if (collapseActiveRoute !== activeRoute) {\n            return collapseActiveRoute;\n          }\n        } else {\n          if (window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1) {\n            return routes[i].name;\n          }\n        }\n      }\n\n      return activeRoute;\n    };\n\n    _this.getRoutes = function (routes) {\n      return routes.map(function (prop, key) {\n        if (prop.collapse) {\n          return _this.getRoutes(prop.views);\n        }\n\n        if (prop.layout === \"/admin\") {\n          return React.createElement(Route, {\n            path: prop.layout + prop.path,\n            component: prop.component,\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          });\n        } else {\n          return null;\n        }\n      });\n    };\n\n    _this.state = {\n      mobileOpen: false,\n      miniActive: false,\n      image: image,\n      color: \"white\",\n      bgColor: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown\"\n    };\n    _this.resizeFunction = _this.resizeFunction.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps = new PerfectScrollbar(this.refs.mainPanel, {\n          suppressScrollX: true,\n          suppressScrollY: false\n        });\n        document.body.style.overflow = \"hidden\";\n      }\n\n      window.addEventListener(\"resize\", this.resizeFunction);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n\n      window.removeEventListener(\"resize\", this.resizeFunction);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.location.pathname !== e.location.pathname) {\n        this.refs.mainPanel.scrollTop = 0;\n\n        if (this.state.mobileOpen) {\n          this.setState({\n            mobileOpen: false\n          });\n        }\n      }\n    }\n  }, {\n    key: \"getRoute\",\n    value: function getRoute() {\n      return this.props.location.pathname !== \"/admin/full-screen-maps\";\n    }\n  }, {\n    key: \"sidebarMinimize\",\n    value: function sidebarMinimize() {\n      this.setState({\n        miniActive: !this.state.miniActive\n      });\n    }\n  }, {\n    key: \"resizeFunction\",\n    value: function resizeFunction() {\n      if (window.innerWidth >= 960) {\n        this.setState({\n          mobileOpen: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _cx;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          rest = _objectWithoutProperties(_this$props, [\"classes\"]);\n\n      var mainPanel = classes.mainPanel + \" \" + cx((_cx = {}, _defineProperty(_cx, classes.mainPanelSidebarMini, this.state.miniActive), _defineProperty(_cx, classes.mainPanelWithPerfectScrollbar, navigator.platform.indexOf(\"Win\") > -1), _cx));\n      return React.createElement(\"div\", {\n        className: classes.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Sidebar, Object.assign({\n        routes: routes,\n        logoText: \"Panel de Usuario\",\n        logo: logo,\n        image: this.state.image,\n        handleDrawerToggle: this.handleDrawerToggle,\n        open: this.state.mobileOpen,\n        color: this.state.color,\n        bgColor: this.state.bgColor,\n        miniActive: this.state.miniActive\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: mainPanel,\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(AdminNavbar, Object.assign({\n        sidebarMinimize: this.sidebarMinimize.bind(this),\n        miniActive: this.state.miniActive,\n        brandText: this.getActiveRoute(routes),\n        handleDrawerToggle: this.handleDrawerToggle\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), this.getRoute() ? React.createElement(\"div\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.getRoutes(routes)))) : React.createElement(\"div\", {\n        className: classes.map,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, this.getRoutes(routes))), this.getRoute() ? React.createElement(Footer, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(appStyle)(Dashboard);","map":{"version":3,"sources":["/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/src/layouts/Admin.jsx"],"names":["React","cx","PropTypes","Switch","Route","PerfectScrollbar","withStyles","AdminNavbar","Footer","Sidebar","FixedPlugin","routes","appStyle","image","ps","Dashboard","props","handleImageClick","setState","handleColorClick","color","handleBgColorClick","bgColor","handleFixedClick","state","fixedClasses","handleDrawerToggle","mobileOpen","getActiveRoute","activeRoute","i","length","collapse","collapseActiveRoute","views","window","location","href","indexOf","layout","path","name","getRoutes","map","prop","key","component","miniActive","hasImage","resizeFunction","bind","navigator","platform","refs","mainPanel","suppressScrollX","suppressScrollY","document","body","style","overflow","addEventListener","destroy","removeEventListener","e","history","pathname","scrollTop","innerWidth","classes","rest","mainPanelSidebarMini","mainPanelWithPerfectScrollbar","wrapper","logo","sidebarMinimize","getRoute","content","container","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport routes from \"routes.js\";\n\nimport appStyle from \"assets/jss/material-dashboard-pro-react/layouts/adminStyle.jsx\";\n\nimport image from \"assets/img/sidebar-2.jpg\";\nimport logo from \"assets/img/logo-white.svg\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobileOpen: false,\n      miniActive: false,\n      image: image,\n      color: \"white\",\n      bgColor: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown\"\n    };\n    this.resizeFunction = this.resizeFunction.bind(this);\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", this.resizeFunction);\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n    window.removeEventListener(\"resize\", this.resizeFunction);\n  }\n  componentDidUpdate(e) {\n    if (e.history.location.pathname !== e.location.pathname) {\n      this.refs.mainPanel.scrollTop = 0;\n      if (this.state.mobileOpen) {\n        this.setState({ mobileOpen: false });\n      }\n    }\n  }\n  handleImageClick = image => {\n    this.setState({ image: image });\n  };\n  handleColorClick = color => {\n    this.setState({ color: color });\n  };\n  handleBgColorClick = bgColor => {\n    this.setState({ bgColor: bgColor });\n  };\n  handleFixedClick = () => {\n    if (this.state.fixedClasses === \"dropdown\") {\n      this.setState({ fixedClasses: \"dropdown show\" });\n    } else {\n      this.setState({ fixedClasses: \"dropdown\" });\n    }\n  };\n  handleDrawerToggle = () => {\n    this.setState({ mobileOpen: !this.state.mobileOpen });\n  };\n  getRoute() {\n    return this.props.location.pathname !== \"/admin/full-screen-maps\";\n  }\n  getActiveRoute = routes => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = this.getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return this.getRoutes(prop.views);\n      }\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  sidebarMinimize() {\n    this.setState({ miniActive: !this.state.miniActive });\n  }\n  resizeFunction() {\n    if (window.innerWidth >= 960) {\n      this.setState({ mobileOpen: false });\n    }\n  }\n  render() {\n    const { classes, ...rest } = this.props;\n    const mainPanel =\n      classes.mainPanel +\n      \" \" +\n      cx({\n        [classes.mainPanelSidebarMini]: this.state.miniActive,\n        [classes.mainPanelWithPerfectScrollbar]:\n          navigator.platform.indexOf(\"Win\") > -1\n      });\n    return (\n      <div className={classes.wrapper}>\n        <Sidebar\n          routes={routes}\n          logoText={\"Panel de Usuario\"}\n          logo={logo}\n          image={this.state.image}\n          handleDrawerToggle={this.handleDrawerToggle}\n          open={this.state.mobileOpen}\n          color={this.state.color}\n          bgColor={this.state.bgColor}\n          miniActive={this.state.miniActive}\n          {...rest}\n        />\n        <div className={mainPanel} ref=\"mainPanel\">\n          <AdminNavbar\n            sidebarMinimize={this.sidebarMinimize.bind(this)}\n            miniActive={this.state.miniActive}\n            brandText={this.getActiveRoute(routes)}\n            handleDrawerToggle={this.handleDrawerToggle}\n            {...rest}\n          />\n          {/* On the /maps/full-screen-maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n          {this.getRoute() ? (\n            <div className={classes.content}>\n              <div className={classes.container}>\n                <Switch>{this.getRoutes(routes)}</Switch>\n              </div>\n            </div>\n          ) : (\n            <div className={classes.map}>\n              <Switch>{this.getRoutes(routes)}</Switch>\n            </div>\n          )}\n          {this.getRoute() ? <Footer fluid /> : null}\n          {/*<FixedPlugin\n            handleImageClick={this.handleImageClick}\n            handleColorClick={this.handleColorClick}\n            handleBgColorClick={this.handleBgColorClick}\n            handleHasImage={this.handleHasImage}\n            color={this.state[\"color\"]}\n            bgColor={this.state[\"bgColor\"]}\n            bgImage={this.state[\"image\"]}\n            handleFixedClick={this.handleFixedClick}\n            fixedClasses={this.state.fixedClasses}\n            sidebarMinimize={this.sidebarMinimize.bind(this)}\n            miniActive={this.state.miniActive}\n          />*/}\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(appStyle)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}
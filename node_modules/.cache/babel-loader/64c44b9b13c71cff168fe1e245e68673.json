{"ast":null,"code":"import _defineProperty from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/src/components/Navbars/AuthNavbar.jsx\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\"; // @material-ui/icons\n\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\nimport LockOpen from \"@material-ui/icons/LockOpen\";\nimport MonetizationOn from \"@material-ui/icons/MonetizationOn\"; // core components\n\nimport Button from \"components/CustomButtons/Button\";\nimport authNavbarStyle from \"assets/jss/material-dashboard-pro-react/components/authNavbarStyle.jsx\";\n\nvar AuthNavbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AuthNavbar, _React$Component);\n\n  function AuthNavbar(props) {\n    var _this;\n\n    _classCallCheck(this, AuthNavbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthNavbar).call(this, props));\n\n    _this.handleDrawerToggle = function () {\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(AuthNavbar, [{\n    key: \"activeRoute\",\n    // verifies if routeName is the one active (in browser input)\n    value: function activeRoute(routeName) {\n      return this.props.location.pathname.indexOf(routeName) > -1 ? true : false;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.location.pathname !== e.location.pathname) {\n        this.setState({\n          open: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          color = _this$props.color,\n          brandText = _this$props.brandText;\n      var appBarClasses = cx(_defineProperty({}, \" \" + classes[color], color));\n      var list = React.createElement(List, {\n        className: classes.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        className: classes.listItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/admin/dashboard\",\n        className: classes.navLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Dashboard, {\n        className: classes.listItemIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        primary: \"Dashboard\",\n        disableTypography: true,\n        className: classes.listItemText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }))), React.createElement(ListItem, {\n        className: classes.listItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/auth/pricing-page\",\n        className: cx(classes.navLink, _defineProperty({}, classes.navLinkActive, this.activeRoute(\"/auth/pricing-page\"))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(MonetizationOn, {\n        className: classes.listItemIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        primary: \"Pricing\",\n        disableTypography: true,\n        className: classes.listItemText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))), React.createElement(ListItem, {\n        className: classes.listItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/auth/register-page\",\n        className: cx(classes.navLink, _defineProperty({}, classes.navLinkActive, this.activeRoute(\"/auth/register-page\"))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(PersonAdd, {\n        className: classes.listItemIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        primary: \"Register\",\n        disableTypography: true,\n        className: classes.listItemText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))), React.createElement(ListItem, {\n        className: classes.listItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/auth/login-page\",\n        className: cx(classes.navLink, _defineProperty({}, classes.navLinkActive, this.activeRoute(\"/auth/login-page\"))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Fingerprint, {\n        className: classes.listItemIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        primary: \"Login\",\n        disableTypography: true,\n        className: classes.listItemText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))), React.createElement(ListItem, {\n        className: classes.listItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/auth/lock-screen-page\",\n        className: cx(classes.navLink, _defineProperty({}, classes.navLinkActive, this.activeRoute(\"/auth/lock-screen-page\"))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(LockOpen, {\n        className: classes.listItemIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        primary: \"Lock\",\n        disableTypography: true,\n        className: classes.listItemText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))));\n      return React.createElement(AppBar, {\n        position: \"static\",\n        className: classes.appBar + appBarClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Hidden, {\n        smDown: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.flex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Button, {\n        href: \"#\",\n        className: classes.title,\n        color: \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, brandText))), React.createElement(Hidden, {\n        mdUp: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.flex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Button, {\n        href: \"#\",\n        className: classes.title,\n        color: \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"MD Pro React\"))), React.createElement(Hidden, {\n        smDown: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, list), React.createElement(Hidden, {\n        mdUp: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.sidebarButton,\n        color: \"transparent\",\n        justIcon: true,\n        \"aria-label\": \"open drawer\",\n        onClick: this.handleDrawerToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))), React.createElement(Hidden, {\n        mdUp: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Hidden, {\n        mdUp: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        variant: \"temporary\",\n        anchor: \"right\",\n        open: this.state.open,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        onClose: this.handleDrawerToggle,\n        ModalProps: {\n          keepMounted: true // Better open performance on mobile.\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, list)))));\n    }\n  }]);\n\n  return AuthNavbar;\n}(React.Component);\n\nAuthNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  brandText: PropTypes.string\n};\nexport default withStyles(authNavbarStyle)(AuthNavbar);","map":{"version":3,"sources":["/Users/rgm93/Library/Mobile Documents/com~apple~CloudDocs/Proyectos/Trabajo/SCAPESHIFT/BC/bc_dashboard/src/components/Navbars/AuthNavbar.jsx"],"names":["React","cx","PropTypes","NavLink","withStyles","AppBar","Toolbar","Hidden","Drawer","List","ListItem","ListItemText","Dashboard","Menu","PersonAdd","Fingerprint","LockOpen","MonetizationOn","Button","authNavbarStyle","AuthNavbar","props","handleDrawerToggle","setState","open","state","routeName","location","pathname","indexOf","e","history","classes","color","brandText","appBarClasses","list","listItem","navLink","listItemIcon","listItemText","navLinkActive","activeRoute","appBar","container","flex","title","sidebarButton","paper","drawerPaper","keepMounted","Component","propTypes","object","isRequired","oneOf","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\n// @material-ui/icons\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\nimport LockOpen from \"@material-ui/icons/LockOpen\";\nimport MonetizationOn from \"@material-ui/icons/MonetizationOn\";\n\n// core components\nimport Button from \"components/CustomButtons/Button\";\n\nimport authNavbarStyle from \"assets/jss/material-dashboard-pro-react/components/authNavbarStyle.jsx\";\n\nclass AuthNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n  handleDrawerToggle = () => {\n    this.setState({ open: !this.state.open });\n  };\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? true : false;\n  }\n  componentDidUpdate(e) {\n    if (e.history.location.pathname !== e.location.pathname) {\n      this.setState({ open: false });\n    }\n  }\n  render() {\n    const { classes, color, brandText } = this.props;\n    const appBarClasses = cx({\n      [\" \" + classes[color]]: color\n    });\n    var list = (\n      <List className={classes.list}>\n        <ListItem className={classes.listItem}>\n          <NavLink to={\"/admin/dashboard\"} className={classes.navLink}>\n            <Dashboard className={classes.listItemIcon} />\n            <ListItemText\n              primary={\"Dashboard\"}\n              disableTypography={true}\n              className={classes.listItemText}\n            />\n          </NavLink>\n        </ListItem>\n        <ListItem className={classes.listItem}>\n          <NavLink\n            to={\"/auth/pricing-page\"}\n            className={cx(classes.navLink, {\n              [classes.navLinkActive]: this.activeRoute(\"/auth/pricing-page\")\n            })}\n          >\n            <MonetizationOn className={classes.listItemIcon} />\n            <ListItemText\n              primary={\"Pricing\"}\n              disableTypography={true}\n              className={classes.listItemText}\n            />\n          </NavLink>\n        </ListItem>\n        <ListItem className={classes.listItem}>\n          <NavLink\n            to={\"/auth/register-page\"}\n            className={cx(classes.navLink, {\n              [classes.navLinkActive]: this.activeRoute(\"/auth/register-page\")\n            })}\n          >\n            <PersonAdd className={classes.listItemIcon} />\n            <ListItemText\n              primary={\"Register\"}\n              disableTypography={true}\n              className={classes.listItemText}\n            />\n          </NavLink>\n        </ListItem>\n        <ListItem className={classes.listItem}>\n          <NavLink\n            to={\"/auth/login-page\"}\n            className={cx(classes.navLink, {\n              [classes.navLinkActive]: this.activeRoute(\"/auth/login-page\")\n            })}\n          >\n            <Fingerprint className={classes.listItemIcon} />\n            <ListItemText\n              primary={\"Login\"}\n              disableTypography={true}\n              className={classes.listItemText}\n            />\n          </NavLink>\n        </ListItem>\n        <ListItem className={classes.listItem}>\n          <NavLink\n            to={\"/auth/lock-screen-page\"}\n            className={cx(classes.navLink, {\n              [classes.navLinkActive]: this.activeRoute(\n                \"/auth/lock-screen-page\"\n              )\n            })}\n          >\n            <LockOpen className={classes.listItemIcon} />\n            <ListItemText\n              primary={\"Lock\"}\n              disableTypography={true}\n              className={classes.listItemText}\n            />\n          </NavLink>\n        </ListItem>\n      </List>\n    );\n    return (\n      <AppBar position=\"static\" className={classes.appBar + appBarClasses}>\n        <Toolbar className={classes.container}>\n          <Hidden smDown>\n            <div className={classes.flex}>\n              <Button href=\"#\" className={classes.title} color=\"transparent\">\n                {brandText}\n              </Button>\n            </div>\n          </Hidden>\n          <Hidden mdUp>\n            <div className={classes.flex}>\n              <Button href=\"#\" className={classes.title} color=\"transparent\">\n                MD Pro React\n              </Button>\n            </div>\n          </Hidden>\n          <Hidden smDown>{list}</Hidden>\n          <Hidden mdUp>\n            <Button\n              className={classes.sidebarButton}\n              color=\"transparent\"\n              justIcon\n              aria-label=\"open drawer\"\n              onClick={this.handleDrawerToggle}\n            >\n              <Menu />\n            </Button>\n          </Hidden>\n          <Hidden mdUp>\n            <Hidden mdUp>\n              <Drawer\n                variant=\"temporary\"\n                anchor={\"right\"}\n                open={this.state.open}\n                classes={{\n                  paper: classes.drawerPaper\n                }}\n                onClose={this.handleDrawerToggle}\n                ModalProps={{\n                  keepMounted: true // Better open performance on mobile.\n                }}\n              >\n                {list}\n              </Drawer>\n            </Hidden>\n          </Hidden>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nAuthNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  brandText: PropTypes.string\n};\n\nexport default withStyles(authNavbarStyle)(AuthNavbar);\n"]},"metadata":{},"sourceType":"module"}